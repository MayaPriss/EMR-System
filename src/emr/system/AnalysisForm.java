/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package emr.system;
import emr.system.classes.Analysis;
import emr.system.classes.BloodAnalysis;
import emr.system.classes.LiverAnalysis;
import emr.system.classes.UrineAnalysis;
import emr.system.classes.PatientDetails; 






import emr.system.classes.LiverAnalysis;
import emr.system.classes.UrineAnalysis;
import emr.system.classes.BloodAnalysis;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;


/**
 *
 * @author Rayyan
 */
public class AnalysisForm extends javax.swing.JFrame {

    /**
     * Creates new form AnalysisForm1
     */
    public AnalysisForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        LiverAnalysisPanel = new emr.system.PanelRound();
        altTextField = new javax.swing.JTextField();
        astTextField = new javax.swing.JTextField();
        prothombinTimeTextField = new javax.swing.JTextField();
        albuminTextField = new javax.swing.JTextField();
        totalProteinTextField = new javax.swing.JTextField();
        alpTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        analysisDateTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        customButton2 = new emr.system.customComponents.CustomButton();
        customButton3 = new emr.system.customComponents.CustomButton();
        customPanelButton5 = new emr.system.customComponents.CustomPanelButton();
        BloodAnalysisPanel = new emr.system.PanelRound();
        bloodTypeTextField = new javax.swing.JTextField();
        rbcCountTextField = new javax.swing.JTextField();
        haemoglobinTextField = new javax.swing.JTextField();
        ironTextField = new javax.swing.JTextField();
        platletCountTextField = new javax.swing.JTextField();
        wbcCountTextField = new javax.swing.JTextField();
        cbcCountTextField = new javax.swing.JTextField();
        baAnalalysisDateTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        customButton4 = new emr.system.customComponents.CustomButton();
        customButton5 = new emr.system.customComponents.CustomButton();
        customButton6 = new emr.system.customComponents.CustomButton();
        UrineAnalysisPanel = new emr.system.PanelRound();
        densityTextField = new javax.swing.JTextField();
        colorTextField = new javax.swing.JTextField();
        reactionTextField = new javax.swing.JTextField();
        transperancyTextField = new javax.swing.JTextField();
        urineAnalysisDateTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        customButton7 = new emr.system.customComponents.CustomButton();
        customButton8 = new emr.system.customComponents.CustomButton();
        customButton9 = new emr.system.customComponents.CustomButton();
        customPanelButton1 = new emr.system.customComponents.CustomPanelButton();
        customPanelButton2 = new emr.system.customComponents.CustomPanelButton();
        customPanelButton3 = new emr.system.customComponents.CustomPanelButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        liverAnalysisTable = new emr.system.customComponents.CustomTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        bloodAnalysisTable = new emr.system.customComponents.CustomTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        urineAnalysisTable = new emr.system.customComponents.CustomTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1300, 800));

        background.setBackground(new java.awt.Color(255, 254, 238));

        LiverAnalysisPanel.setBackground(new java.awt.Color(211, 221, 255));

        altTextField.setBackground(new java.awt.Color(255, 254, 238));
        altTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        astTextField.setBackground(new java.awt.Color(255, 254, 238));
        astTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        prothombinTimeTextField.setBackground(new java.awt.Color(255, 254, 238));
        prothombinTimeTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        albuminTextField.setBackground(new java.awt.Color(255, 254, 238));
        albuminTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        totalProteinTextField.setBackground(new java.awt.Color(255, 254, 238));
        totalProteinTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        alpTextField.setBackground(new java.awt.Color(255, 254, 238));
        alpTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        jLabel1.setBackground(new java.awt.Color(0, 0, 139));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 139));
        jLabel1.setText("Alanine Transaminase");

        jLabel2.setBackground(new java.awt.Color(0, 0, 139));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 139));
        jLabel2.setText("Alanine Transaminase");

        analysisDateTextField.setBackground(new java.awt.Color(255, 254, 238));
        analysisDateTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));
        analysisDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analysisDateTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 139));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 139));
        jLabel3.setText("Alkaline phosphatase");

        jLabel4.setBackground(new java.awt.Color(0, 0, 139));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 139));
        jLabel4.setText("Alkaline phosphatase");

        jLabel5.setBackground(new java.awt.Color(0, 0, 139));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 139));
        jLabel5.setText("Prothombin Time");

        jLabel6.setBackground(new java.awt.Color(0, 0, 139));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 139));
        jLabel6.setText("Total Protein");

        jLabel7.setBackground(new java.awt.Color(0, 0, 139));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 139));
        jLabel7.setText("Analysis Date");

        customButton2.setBackground(new java.awt.Color(255, 254, 238));
        customButton2.setText("EDIT");
        customButton2.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton2.setRadius(20);
        customButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton2ActionPerformed(evt);
            }
        });

        customButton3.setBackground(new java.awt.Color(255, 254, 238));
        customButton3.setText("REFRESH");
        customButton3.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton3.setRadius(20);
        customButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton3ActionPerformed(evt);
            }
        });

        customPanelButton5.setBackground(new java.awt.Color(255, 254, 238));
        customPanelButton5.setForeground(new java.awt.Color(0, 0, 139));
        customPanelButton5.setText("ADD");
        customPanelButton5.setOutlineColor(new java.awt.Color(0, 0, 139));
        customPanelButton5.setRadius(20);
        customPanelButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customPanelButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LiverAnalysisPanelLayout = new javax.swing.GroupLayout(LiverAnalysisPanel);
        LiverAnalysisPanel.setLayout(LiverAnalysisPanelLayout);
        LiverAnalysisPanelLayout.setHorizontalGroup(
            LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiverAnalysisPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LiverAnalysisPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(astTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(altTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(LiverAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(albuminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addGap(18, 18, 18)
                .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LiverAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prothombinTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalProteinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(analysisDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(LiverAnalysisPanelLayout.createSequentialGroup()
                        .addComponent(customPanelButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(216, 216, 216))
        );
        LiverAnalysisPanelLayout.setVerticalGroup(
            LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiverAnalysisPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LiverAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(altTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(astTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(24, 24, 24)
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(alpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(albuminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(customButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customPanelButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(LiverAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(LiverAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prothombinTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(totalProteinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(analysisDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BloodAnalysisPanel.setBackground(new java.awt.Color(211, 221, 255));

        bloodTypeTextField.setBackground(new java.awt.Color(255, 254, 238));
        bloodTypeTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        rbcCountTextField.setBackground(new java.awt.Color(255, 254, 238));
        rbcCountTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        haemoglobinTextField.setBackground(new java.awt.Color(255, 254, 238));
        haemoglobinTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        ironTextField.setBackground(new java.awt.Color(255, 254, 238));
        ironTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        platletCountTextField.setBackground(new java.awt.Color(255, 254, 238));
        platletCountTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        wbcCountTextField.setBackground(new java.awt.Color(255, 254, 238));
        wbcCountTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        cbcCountTextField.setBackground(new java.awt.Color(255, 254, 238));
        cbcCountTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        baAnalalysisDateTextField.setBackground(new java.awt.Color(255, 254, 238));
        baAnalalysisDateTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        jLabel8.setBackground(new java.awt.Color(0, 0, 139));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 139));
        jLabel8.setText("Blood Type");

        jLabel9.setBackground(new java.awt.Color(0, 0, 139));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 139));
        jLabel9.setText("WBC Count");

        jLabel10.setBackground(new java.awt.Color(0, 0, 139));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 139));
        jLabel10.setText("RBC Count");

        jLabel11.setBackground(new java.awt.Color(0, 0, 139));
        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 139));
        jLabel11.setText("CBC Count");

        jLabel12.setBackground(new java.awt.Color(0, 0, 139));
        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 139));
        jLabel12.setText("Platlet Count");

        jLabel13.setBackground(new java.awt.Color(0, 0, 139));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 139));
        jLabel13.setText("Iron In Blood");

        jLabel14.setBackground(new java.awt.Color(0, 0, 139));
        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 139));
        jLabel14.setText("Haemoglobin");

        jLabel15.setBackground(new java.awt.Color(0, 0, 139));
        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 139));
        jLabel15.setText("Analysis Date");

        customButton4.setBackground(new java.awt.Color(255, 254, 238));
        customButton4.setText("ADD");
        customButton4.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton4.setRadius(20);
        customButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton4ActionPerformed(evt);
            }
        });

        customButton5.setBackground(new java.awt.Color(255, 254, 238));
        customButton5.setText("EDIT");
        customButton5.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton5.setRadius(20);
        customButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton5ActionPerformed(evt);
            }
        });

        customButton6.setBackground(new java.awt.Color(255, 254, 238));
        customButton6.setText("REFRESH");
        customButton6.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton6.setRadius(20);
        customButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BloodAnalysisPanelLayout = new javax.swing.GroupLayout(BloodAnalysisPanel);
        BloodAnalysisPanel.setLayout(BloodAnalysisPanelLayout);
        BloodAnalysisPanelLayout.setHorizontalGroup(
            BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BloodAnalysisPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BloodAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(35, 35, 35)
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(wbcCountTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bloodTypeTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbcCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbcCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12))
                            .addComponent(jLabel15))
                        .addGap(35, 35, 35)
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(baAnalalysisDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(platletCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ironTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(haemoglobinTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BloodAnalysisPanelLayout.createSequentialGroup()
                        .addComponent(customButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        BloodAnalysisPanelLayout.setVerticalGroup(
            BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BloodAnalysisPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(BloodAnalysisPanelLayout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel9)
                            .addGap(21, 21, 21)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel11))
                        .addGroup(BloodAnalysisPanelLayout.createSequentialGroup()
                            .addComponent(platletCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(ironTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(haemoglobinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(baAnalalysisDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(BloodAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bloodTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wbcCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbcCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbcCountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BloodAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        UrineAnalysisPanel.setBackground(new java.awt.Color(211, 221, 255));

        densityTextField.setBackground(new java.awt.Color(255, 254, 238));
        densityTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        colorTextField.setBackground(new java.awt.Color(255, 254, 238));
        colorTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        reactionTextField.setBackground(new java.awt.Color(255, 254, 238));
        reactionTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        transperancyTextField.setBackground(new java.awt.Color(255, 254, 238));
        transperancyTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        urineAnalysisDateTextField.setBackground(new java.awt.Color(255, 254, 238));
        urineAnalysisDateTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 139)));

        jLabel16.setBackground(new java.awt.Color(0, 0, 139));
        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 139));
        jLabel16.setText("Color");

        jLabel17.setBackground(new java.awt.Color(0, 0, 139));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 139));
        jLabel17.setText("Density");

        jLabel18.setBackground(new java.awt.Color(0, 0, 139));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 139));
        jLabel18.setText("Transperancy");

        jLabel19.setBackground(new java.awt.Color(0, 0, 139));
        jLabel19.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 139));
        jLabel19.setText("Reaction");

        jLabel20.setBackground(new java.awt.Color(0, 0, 139));
        jLabel20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 139));
        jLabel20.setText("Analysis Date");

        customButton7.setBackground(new java.awt.Color(255, 254, 238));
        customButton7.setText("ADD");
        customButton7.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton7.setRadius(20);
        customButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton7ActionPerformed(evt);
            }
        });

        customButton8.setBackground(new java.awt.Color(255, 254, 238));
        customButton8.setText("EDIT");
        customButton8.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton8.setRadius(20);
        customButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton8ActionPerformed(evt);
            }
        });

        customButton9.setBackground(new java.awt.Color(255, 254, 238));
        customButton9.setText("REFRESH");
        customButton9.setOutlineColor(new java.awt.Color(0, 0, 139));
        customButton9.setRadius(20);
        customButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UrineAnalysisPanelLayout = new javax.swing.GroupLayout(UrineAnalysisPanel);
        UrineAnalysisPanel.setLayout(UrineAnalysisPanelLayout);
        UrineAnalysisPanelLayout.setHorizontalGroup(
            UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UrineAnalysisPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(50, 50, 50)
                .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(densityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reactionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UrineAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(urineAnalysisDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transperancyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(UrineAnalysisPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(customButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        UrineAnalysisPanelLayout.setVerticalGroup(
            UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UrineAnalysisPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UrineAnalysisPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel19))
                    .addGroup(UrineAnalysisPanelLayout.createSequentialGroup()
                        .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(transperancyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(densityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(urineAnalysisDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(UrineAnalysisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reactionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        customPanelButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 139), 2));
        customPanelButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emr/system/icons/homeIcon.png"))); // NOI18N
        customPanelButton1.setOutlineColor(new java.awt.Color(0, 0, 139));
        customPanelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customPanelButton1ActionPerformed(evt);
            }
        });

        customPanelButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 139), 2));
        customPanelButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emr/system/icons/infoIcon.png"))); // NOI18N
        customPanelButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customPanelButton2ActionPerformed(evt);
            }
        });

        customPanelButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 139), 2));
        customPanelButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emr/system/icons/logOffIcon.png"))); // NOI18N
        customPanelButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customPanelButton3ActionPerformed(evt);
            }
        });

        liverAnalysisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(liverAnalysisTable);

        bloodAnalysisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(bloodAnalysisTable);

        urineAnalysisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(urineAnalysisTable);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 139));
        jLabel21.setText("LIVER LAB RESULTS");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 139));
        jLabel22.setText("BLOOD TEST LAB RESULTS");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 139));
        jLabel23.setText("URINE TEST LAB RESULTS");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emr/system/icons/analysisResultsIcon.png"))); // NOI18N

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(UrineAnalysisPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BloodAnalysisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(LiverAnalysisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 138, Short.MAX_VALUE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customPanelButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customPanelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customPanelButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(customPanelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customPanelButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(customPanelButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)))
                .addGap(5, 5, 5)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LiverAnalysisPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addGap(1, 1, 1)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BloodAnalysisPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UrineAnalysisPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void analysisDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analysisDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_analysisDateTextFieldActionPerformed

    private void customButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton2ActionPerformed
       
        String filePath = "C:\\Users\\Rayyan\\Desktop\\LiverAnalysis.txt";
        // Initializing a file object         
        File file = new File(filePath);
        try{
            // Initializing a FileWriter and BufferedWriter
            
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            // Writing the first line in the textfile which will be used as column headers in the table             
            
            bw.write("PID, Analysis Date, Alt, Ast, Alp, Albumin,  Prothombin Time, Total Protein");
            // Jumping to next line to start entering the data           
            bw.newLine();
            
            //Using two for loops to traverse through the rows in each column to read the data and store it into the textfile            
            for(int i =0; i < liverAnalysisTable.getRowCount(); i++){
                for(int j = 0; j < liverAnalysisTable.getColumnCount(); j++){
                    // Writing the data at the current column and row to the textfile and then adding a "," to make it a CSV file                      
                    bw.write(liverAnalysisTable.getValueAt(i, j).toString()+ ",");

                }
               //Creating a new line to for next loop iteration                 
                bw.newLine();

            }
            //Closing the BufferedWriter and FileWriter             
            bw.close();
            fw.close();

        }
        catch(IOException ex){
            System.out.println("Errror");
        }

    }//GEN-LAST:event_customButton2ActionPerformed

    private void customButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton3ActionPerformed
 String filePath = "C:\\Users\\Rayyan\\Desktop\\LiverAnalysis.txt";
        //Initializing a file object 
        File file = new File(filePath);

        try {
            //Initializing a BufferedReader to read the file             
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            /*
            Splitting the values of the first line by a coma 
            Storing those values into an array to be used later column headers 
            */            
            String[] columnsName = firstLine.split(",");
            
            //Getting the default table model to identify columns and rows             

            DefaultTableModel model = (DefaultTableModel)liverAnalysisTable.getModel();
            
            //Setting the array values as column identifiers 
            model.setColumnIdentifiers(columnsName);
            
            //Setting row count as 0, so old values are not repeated again after each refresh              
            model.setRowCount(0);
            Object[] tableLines = br.lines().toArray();
            
            /*
            Using a for loop to go through each value in the textfile
            All characters after a coma are read as a single word 
            The word is then pushed into the table at the current index of row and column in the for loop 
             */
            for (int i = 0; i < tableLines.length; i++){
                String line= tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);

            }
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(AnalysisFormOld.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_customButton3ActionPerformed

    private void customButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton4ActionPerformed
       //Getting all the values to be added from the textfields 
        String pID = "001";
        String bloodAnalysisDate = baAnalalysisDateTextField.getText();
        String bloodType = bloodTypeTextField.getText();
        int wbcCount = Integer.parseInt(wbcCountTextField.getText());
        int rbcCount = Integer.parseInt(rbcCountTextField.getText());
        int cbcCount = Integer.parseInt(cbcCountTextField.getText());
        int platletCount = Integer.parseInt(platletCountTextField.getText());
        String iron = ironTextField.getText();
        int haemoglobin = Integer.parseInt(haemoglobinTextField.getText());
         
        //Passing those values into the constructor of the class  
         
        BloodAnalysis BloodAnalysis1 = new BloodAnalysis(pID, bloodAnalysisDate, bloodType, wbcCount, rbcCount, cbcCount, platletCount, iron,haemoglobin);
        /*
        Using getters to get the values from the object and concatinating them into one variable to be added as a new line at the end of the textfile        
        Writing the line to the end of the textfile
        */
        
        String adding = "\n" + BloodAnalysis1.getPatientId() + "," + BloodAnalysis1.getAnalysisDate() + "," + BloodAnalysis1.getBloodType()+ "," + BloodAnalysis1.getWbcCount() + "," + BloodAnalysis1.getRbcCount() + "," + BloodAnalysis1.getCbcCount() + "," + BloodAnalysis1.getPlatletCount() + "," + BloodAnalysis1.getIron() + "," + BloodAnalysis1.getHaemoglobin() + ",";

        String filePath = "C:\\Users\\Rayyan\\Desktop\\BloodAnalysis.txt";
        try {
            Files.write(Paths.get(filePath), adding.getBytes(), StandardOpenOption.APPEND);

        } catch (IOException ex) {
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_customButton4ActionPerformed

    private void customButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton5ActionPerformed
 String filePath = "C:\\Users\\Rayyan\\Desktop\\BloodAnalysis.txt";
 // Initializing a file object          
 File file = new File(filePath);
        
           try{
            // Initializing a FileWriter and BufferedWriter
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            // Writing the first line in the textfile which will be used as column headers in the table 
            bw.write("PID, Analysis Date, Blood Type, WBC , RBC, CBC, Platlet, Iron, Haemoglobin");
            // Jumping to next line to start entering the data   
            bw.newLine();
            
            //Using two for loops to traverse through the rows in each column to read the data and store it into the textfile  
           
            for(int i =0; i < bloodAnalysisTable.getRowCount(); i++){
                for(int j = 0; j < bloodAnalysisTable.getColumnCount(); j++){
                    // Writing the data at the current column and row to the textfile and then adding a "," to make it a CSV file                      
                    bw.write(bloodAnalysisTable.getValueAt(i, j).toString()+ ",");

                }
               //Creating a new line to for next loop iteration                                
                bw.newLine();

            }
            //Closing the BufferedWriter and FileWriter                         
            bw.close();
            fw.close();

        }
        catch(IOException ex){
            System.out.println("Errror");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_customButton5ActionPerformed

    private void customButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton6ActionPerformed
 String filePath = "C:\\Users\\Rayyan\\Desktop\\BloodAnalysis.txt";
        //Initializing a file object 
        File file = new File(filePath);

        try {
            //Initializing a BufferedReader to read the file             
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            /*
            Splitting the values of the first line by a coma 
            Storing those values into an array to be used later column headers 
            */            
            String[] columnsName = firstLine.split(",");
            
            //Getting the default table model to identify columns and rows             

            DefaultTableModel model = (DefaultTableModel)bloodAnalysisTable.getModel();
            
            //Setting the array values as column identifiers 
            model.setColumnIdentifiers(columnsName);
            
            //Setting row count as 0, so old values are not repeated again after each refresh              
            model.setRowCount(0);
            Object[] tableLines = br.lines().toArray();
            
            /*
            Using a for loop to go through each value in the textfile
            All characters after a coma are read as a single word 
            The word is then pushed into the table at the current index of row and column in the for loop 
             */
            for (int i = 0; i < tableLines.length; i++){
                String line= tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);

            }
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(AnalysisFormOld.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_customButton6ActionPerformed

    private void customButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton7ActionPerformed
        //Getting all the values to be added from the textfields
        String pId = "001";
        String analysisDate = urineAnalysisDateTextField.getText();
        String color = colorTextField.getText();
        String density = densityTextField.getText();
        String reaction = reactionTextField.getText();
        String transperancy = transperancyTextField.getText();

        
         //Passing those values into the constructor of the class 
         
        UrineAnalysis UrineAnalysis1 = new UrineAnalysis(pId,analysisDate, color , density, reaction, transperancy);

        String adding = pId + "," + UrineAnalysis1.getAnalysisDate()+ "," + UrineAnalysis1.color+ "," + UrineAnalysis1.density + ","+ UrineAnalysis1.reaction+ "," + UrineAnalysis1.transperancy+ ",";

        /*
        Using getters to get the values from the object and concatinating them into one variable to be added as a new line at the end of the textfile        
        Writing the line to the end of the textfile
        */
        
        String filePath = "C:\\Users\\Rayyan\\Desktop\\UrineAnalysis.txt";
        try {
            Files.write(Paths.get(filePath), adding.getBytes(), StandardOpenOption.APPEND);

        } catch (IOException ex) {
            ex.printStackTrace();
        }

       
    }//GEN-LAST:event_customButton7ActionPerformed

    private void customButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton8ActionPerformed
 String filePath = "C:\\Users\\Rayyan\\Desktop\\UrineAnalysis.txt";
 
// Initializing a file object            
 File file = new File(filePath);

        try{
            // Initializing a FileWriter and BufferedWriter
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            // Writing the first line in the textfile which will be used as column headers in the table 
            bw.write("PID, Analysis Date, Alt, Ast, Alp, Albumin,  Prothombin Time, Total Protein");
            // Jumping to next line to start entering the data   
            bw.newLine();

            //Using two for loops to traverse through the rows in each column to read the data and store it into the textfile  
            for(int i =0; i < urineAnalysisTable.getRowCount(); i++){
                for(int j = 0; j < urineAnalysisTable.getColumnCount(); j++){
                    // Writing the data at the current column and row to the textfile and then adding a "," to make it a CSV file                                          
                    bw.write(urineAnalysisTable.getValueAt(i, j).toString()+ ",");

                }
               //Creating a new line to for next loop iteration                                 
                bw.newLine();

            }
            //Closing the BufferedWriter and FileWriter             
            bw.close();
            fw.close();

        }
        catch(IOException ex){
            System.out.println("Errror");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_customButton8ActionPerformed

    private void customButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customButton9ActionPerformed
  String filePath = "C:\\Users\\Rayyan\\Desktop\\UrineAnalysis.txt";
        //Initializing a file object 
        File file = new File(filePath);

        try {
            //Initializing a BufferedReader to read the file             
            BufferedReader br = new BufferedReader(new FileReader(file));
            String firstLine = br.readLine().trim();
            /*
            Splitting the values of the first line by a coma 
            Storing those values into an array to be used later column headers 
            */            
            String[] columnsName = firstLine.split(",");
            
            //Getting the default table model to identify columns and rows             

            DefaultTableModel model = (DefaultTableModel)urineAnalysisTable.getModel();
            
            //Setting the array values as column identifiers 
            model.setColumnIdentifiers(columnsName);
            
            //Setting row count as 0, so old values are not repeated again after each refresh              
            model.setRowCount(0);
            Object[] tableLines = br.lines().toArray();
            
            /*
            Using a for loop to go through each value in the textfile
            All characters after a coma are read as a single word 
            The word is then pushed into the table at the current index of row and column in the for loop 
             */
            for (int i = 0; i < tableLines.length; i++){
                String line= tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);

            }
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(AnalysisFormOld.class.getName()).log(Level.SEVERE, null, ex);
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_customButton9ActionPerformed

    private void customPanelButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customPanelButton5ActionPerformed
        //Getting all the values to be added from the textfields 
        
        String pID = "001";
        String analysisDate = analysisDateTextField.getText();
        double alt = Double.parseDouble(altTextField.getText());
        double ast = Double.parseDouble(astTextField.getText());
        double alp = Double.parseDouble(alpTextField.getText());
        double albumin = Double.parseDouble(albuminTextField.getText());
        double prothombinTime = Double.parseDouble(prothombinTimeTextField.getText());
        double totalProtein = Double.parseDouble(totalProteinTextField.getText());
        
        //Passing those values into the constructor of the class 
        
        LiverAnalysis LiverAnalysis1 = new LiverAnalysis(pID, analysisDate, alt, ast, alp, albumin,  prothombinTime, totalProtein);

        /*
        Using getters to get the values from the object and concatinating them into one variable to be added as a new line at the end of the textfile        
        Writing the line to the end of the textfile
        */
        String adding = "\n" + pID  + "," + LiverAnalysis1.analysisDate + "," + LiverAnalysis1.getAlt()+ "," + LiverAnalysis1.getAst() + "," + LiverAnalysis1.alp + "," + LiverAnalysis1.getAlbumin() + "," + LiverAnalysis1.getProthombin() + "," + LiverAnalysis1.getTotalProtein() + ",";
            
        String filePath = "C:\\Users\\Rayyan\\Desktop\\LiverAnalysis.txt";
        try {
        
        Files.write(Paths.get(filePath), adding.getBytes(), StandardOpenOption.APPEND);

        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_customPanelButton5ActionPerformed

    private void customPanelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customPanelButton1ActionPerformed
    new MainMenu().setVisible(true); 
    this.dispose(); 
        
    }//GEN-LAST:event_customPanelButton1ActionPerformed

    private void customPanelButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customPanelButton3ActionPerformed
    new LoginPage().setVisible(true); 
    this.dispose();

    }//GEN-LAST:event_customPanelButton3ActionPerformed

    private void customPanelButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customPanelButton2ActionPerformed
    new MedicalHistoryForm().setVisible(true);
    this.dispose(); 

     
    }//GEN-LAST:event_customPanelButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnalysisForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnalysisForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnalysisForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnalysisForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnalysisForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private emr.system.PanelRound BloodAnalysisPanel;
    private emr.system.PanelRound LiverAnalysisPanel;
    private emr.system.PanelRound UrineAnalysisPanel;
    private javax.swing.JTextField albuminTextField;
    private javax.swing.JTextField alpTextField;
    private javax.swing.JTextField altTextField;
    private javax.swing.JTextField analysisDateTextField;
    private javax.swing.JTextField astTextField;
    private javax.swing.JTextField baAnalalysisDateTextField;
    private javax.swing.JPanel background;
    private emr.system.customComponents.CustomTable bloodAnalysisTable;
    private javax.swing.JTextField bloodTypeTextField;
    private javax.swing.JTextField cbcCountTextField;
    private javax.swing.JTextField colorTextField;
    private emr.system.customComponents.CustomButton customButton2;
    private emr.system.customComponents.CustomButton customButton3;
    private emr.system.customComponents.CustomButton customButton4;
    private emr.system.customComponents.CustomButton customButton5;
    private emr.system.customComponents.CustomButton customButton6;
    private emr.system.customComponents.CustomButton customButton7;
    private emr.system.customComponents.CustomButton customButton8;
    private emr.system.customComponents.CustomButton customButton9;
    private emr.system.customComponents.CustomPanelButton customPanelButton1;
    private emr.system.customComponents.CustomPanelButton customPanelButton2;
    private emr.system.customComponents.CustomPanelButton customPanelButton3;
    private emr.system.customComponents.CustomPanelButton customPanelButton5;
    private javax.swing.JTextField densityTextField;
    private javax.swing.JTextField haemoglobinTextField;
    private javax.swing.JTextField ironTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private emr.system.customComponents.CustomTable liverAnalysisTable;
    private javax.swing.JTextField platletCountTextField;
    private javax.swing.JTextField prothombinTimeTextField;
    private javax.swing.JTextField rbcCountTextField;
    private javax.swing.JTextField reactionTextField;
    private javax.swing.JTextField totalProteinTextField;
    private javax.swing.JTextField transperancyTextField;
    private javax.swing.JTextField urineAnalysisDateTextField;
    private emr.system.customComponents.CustomTable urineAnalysisTable;
    private javax.swing.JTextField wbcCountTextField;
    // End of variables declaration//GEN-END:variables
}
